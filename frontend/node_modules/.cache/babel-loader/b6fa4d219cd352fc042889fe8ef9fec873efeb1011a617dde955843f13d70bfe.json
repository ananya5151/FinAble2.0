{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anany\\\\OneDrive\\\\Desktop\\\\DTI\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:2000/api/\";\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 403) {\n    // Handle CORS error\n    console.error('CORS Error:', error);\n    // You can handle CORS errors here, such as retrying the request with appropriate headers\n  }\n\n  return Promise.reject(error);\n});\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Add income to the list of incomes\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}income/add`, income);\n      getIncomes(); // Fetch updated incomes\n    } catch (error) {\n      setError('Failed to add income. Please try again.'); // Set error state in case of failure\n      console.error('Error adding income:', error);\n    }\n  };\n\n  // Fetch incomes from the server\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}incomes/list`);\n      setIncomes(response.data);\n    } catch (error) {\n      setError('Failed to fetch incomes. Please try again.'); // Set error state in case of failure\n      console.error('Error fetching incomes:', error);\n    }\n  };\n\n  // Delete income by ID\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}income/delete/${id}`);\n      getIncomes(); // Fetch updated incomes\n    } catch (error) {\n      setError('Failed to delete income. Please try again.'); // Set error state in case of failure\n      console.error('Error deleting income:', error);\n    }\n  };\n\n  // Calculate total income\n  const totalIncome = () => {\n    return incomes.reduce((total, income) => total + income.amount, 0);\n  };\n\n  // Add expense to the list of expenses\n  const addExpense = async expense => {\n    try {\n      await axios.post(`${BASE_URL}expenses/add`, expense);\n      getExpenses(); // Fetch updated expenses\n    } catch (error) {\n      setError('Failed to add expense. Please try again.'); // Set error state in case of failure\n      console.error('Error adding expense:', error);\n    }\n  };\n\n  // Fetch expenses from the server\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}expenses`);\n      setExpenses(response.data);\n    } catch (error) {\n      setError('Failed to fetch expenses. Please try again.'); // Set error state in case of failure\n      console.error('Error fetching expenses:', error);\n    }\n  };\n\n  // Delete expense by ID\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}expenses/delete/${id}`);\n      getExpenses(); // Fetch updated expenses\n    } catch (error) {\n      setError('Failed to delete expense. Please try again.'); // Set error state in case of failure\n      console.error('Error deleting expense:', error);\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = () => {\n    return expenses.reduce((total, expense) => total + expense.amount, 0);\n  };\n\n  // Calculate total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Return the recent transaction history\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      addExpense,\n      getExpenses,\n      expenses,\n      deleteExpense,\n      totalIncome,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","interceptors","response","use","error","status","console","Promise","reject","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","setError","addIncome","income","post","getIncomes","get","data","deleteIncome","id","delete","totalIncome","reduce","total","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/anany/OneDrive/Desktop/DTI/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from 'axios';\n\nconst BASE_URL = \"http://localhost:2000/api/\";\n\naxios.interceptors.response.use(\n    response => response,\n    error => {\n      if (error.response && error.response.status === 403) {\n        // Handle CORS error\n        console.error('CORS Error:', error);\n        // You can handle CORS errors here, such as retrying the request with appropriate headers\n      }\n      return Promise.reject(error);\n    }\n  );\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({ children }) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Add income to the list of incomes\n    const addIncome = async (income) => {\n        try {\n            await axios.post(`${BASE_URL}income/add`, income);\n            getIncomes(); // Fetch updated incomes\n        } catch (error) {\n            setError('Failed to add income. Please try again.'); // Set error state in case of failure\n            console.error('Error adding income:', error);\n        }\n    };\n\n    // Fetch incomes from the server\n    const getIncomes = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}incomes/list`);\n            setIncomes(response.data);\n        } catch (error) {\n            setError('Failed to fetch incomes. Please try again.'); // Set error state in case of failure\n            console.error('Error fetching incomes:', error);\n        }\n    };\n\n    // Delete income by ID\n    const deleteIncome = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}income/delete/${id}`);\n            getIncomes(); // Fetch updated incomes\n        } catch (error) {\n            setError('Failed to delete income. Please try again.'); // Set error state in case of failure\n            console.error('Error deleting income:', error);\n        }\n    };\n\n    // Calculate total income\n    const totalIncome = () => {\n        return incomes.reduce((total, income) => total + income.amount, 0);\n    };\n\n    // Add expense to the list of expenses\n    const addExpense = async (expense) => {\n        try {\n            await axios.post(`${BASE_URL}expenses/add`, expense);\n            getExpenses(); // Fetch updated expenses\n        } catch (error) {\n            setError('Failed to add expense. Please try again.'); // Set error state in case of failure\n            console.error('Error adding expense:', error);\n        }\n    };\n\n    // Fetch expenses from the server\n    const getExpenses = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}expenses`);\n            setExpenses(response.data);\n        } catch (error) {\n            setError('Failed to fetch expenses. Please try again.'); // Set error state in case of failure\n            console.error('Error fetching expenses:', error);\n        }\n    };\n\n    // Delete expense by ID\n    const deleteExpense = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}expenses/delete/${id}`);\n            getExpenses(); // Fetch updated expenses\n        } catch (error) {\n            setError('Failed to delete expense. Please try again.'); // Set error state in case of failure\n            console.error('Error deleting expense:', error);\n        }\n    };\n\n    // Calculate total expenses\n    const totalExpenses = () => {\n        return expenses.reduce((total, expense) => total + expense.amount, 0);\n    };\n\n    // Calculate total balance\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses();\n    };\n\n    // Return the recent transaction history\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        return history.slice(0, 3);\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            addExpense,\n            getExpenses,\n            expenses,\n            deleteExpense,\n            totalIncome,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}