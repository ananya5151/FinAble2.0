{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anany\\\\FINTECH\\\\FinAble2.0\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useCallback, useRef, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport bg from './img/bg.png';\nimport { MainLayout } from './styles/Layouts';\nimport Orb from './Components/Orb/Orb';\nimport Navigation from './Components/Navigation/Navigation';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Income from './Components/Income/Income';\nimport Expenses from './Components/Expenses/Expenses';\nimport { useGlobalContext } from './context/globalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [active, setActive] = useState(1);\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [speechEnabled, setSpeechEnabled] = useState(true);\n  const [currentForm, setCurrentForm] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [currentField, setCurrentField] = useState(0);\n  const recognitionRef = useRef(null);\n  const synthRef = useRef(null);\n  const global = useGlobalContext();\n  const formFields = {\n    income: ['title', 'amount', 'category', 'description'],\n    expense: ['title', 'amount', 'category', 'description']\n  };\n\n  // Speech synthesis setup\n  useEffect(() => {\n    if ('speechSynthesis' in window) {\n      synthRef.current = window.speechSynthesis;\n    }\n  }, []);\n\n  // Speech recognition setup\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-IN';\n      recognitionRef.current.onresult = event => {\n        const transcript = event.results[0][0].transcript.toLowerCase().trim();\n        handleVoiceCommand(transcript);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n        speak('Sorry, I couldn\\'t understand that. Please try again.');\n      };\n    }\n  }, []);\n  const speak = useCallback(text => {\n    if (!speechEnabled || !synthRef.current) return;\n    synthRef.current.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.rate = 0.8;\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    utterance.onstart = () => setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n    synthRef.current.speak(utterance);\n  }, [speechEnabled]);\n  const startListening = () => {\n    if (recognitionRef.current && !isListening) {\n      setIsListening(true);\n      recognitionRef.current.start();\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n  const handleVoiceCommand = command => {\n    console.log('Voice command received:', command);\n\n    // Navigation commands\n    if (command.includes('dashboard') || command.includes('home')) {\n      setActive(1);\n      speak('Navigating to Dashboard');\n    } else if (command.includes('income') || command.includes('earnings')) {\n      setActive(3);\n      speak('Navigating to Income section');\n    } else if (command.includes('expense') || command.includes('spending')) {\n      setActive(4);\n      speak('Navigating to Expenses section');\n    } else if (command.includes('transactions')) {\n      setActive(2);\n      speak('Navigating to Transactions');\n    } else if (command.includes('add income')) {\n      setCurrentForm('income');\n      setCurrentField(0);\n      setFormData({});\n      setActive(3);\n      speak('Starting income entry. Please provide the title or name for this income.');\n    } else if (command.includes('add expense')) {\n      setCurrentForm('expense');\n      setCurrentField(0);\n      setFormData({});\n      setActive(4);\n      speak('Starting expense entry. Please provide the title or name for this expense.');\n    } else if (command.includes('cancel') || command.includes('stop')) {\n      setCurrentForm(null);\n      setCurrentField(0);\n      setFormData({});\n      speak('Form cancelled');\n    } else if (command.includes('read total') || command.includes('balance')) {\n      const totalIncome = global.totalIncome();\n      const totalExpenses = global.totalExpenses();\n      const balance = global.totalBalance();\n      speak(`Your total income is ${totalIncome} rupees. Total expenses are ${totalExpenses} rupees. Your current balance is ${balance} rupees.`);\n    } else if (currentForm) {\n      handleFormInput(command);\n    } else {\n      speak('Command not recognized. Say \"dashboard\" for home, \"income\" for income section, \"expenses\" for expenses, \"add income\" to add income, or \"add expense\" to add expense.');\n    }\n  };\n  const handleFormInput = async input => {\n    const fieldName = formFields[currentForm][currentField];\n    if (fieldName === 'amount') {\n      const amount = parseFloat(input.replace(/[^\\d.]/g, ''));\n      if (isNaN(amount)) {\n        speak('Please provide a valid amount in numbers');\n        return;\n      }\n      setFormData(prev => ({\n        ...prev,\n        [fieldName]: amount\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [fieldName]: input\n      }));\n    }\n    const nextField = currentField + 1;\n    if (nextField < formFields[currentForm].length) {\n      setCurrentField(nextField);\n      const nextFieldName = formFields[currentForm][nextField];\n      speak(`Got it. Now please provide the ${nextFieldName === 'amount' ? 'amount in rupees' : nextFieldName}.`);\n    } else {\n      // Form complete\n      const newEntry = {\n        ...formData,\n        [fieldName]: fieldName === 'amount' ? parseFloat(input.replace(/[^\\d.]/g, '')) : input,\n        date: new Date(),\n        category: formData.category || 'Other'\n      };\n      try {\n        if (currentForm === 'income') {\n          await global.addIncome(newEntry);\n          speak(`Income entry added successfully. ${newEntry.title} for ${newEntry.amount} rupees has been recorded.`);\n        } else {\n          await global.addExpense(newEntry);\n          speak(`Expense entry added successfully. ${newEntry.title} for ${newEntry.amount} rupees has been recorded.`);\n        }\n      } catch (error) {\n        speak('There was an error saving your entry. Please try again.');\n      }\n      setCurrentForm(null);\n      setCurrentField(0);\n      setFormData({});\n    }\n  };\n  const displayData = () => {\n    switch (active) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          currentForm: currentForm,\n          setCurrentForm: setCurrentForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          currentForm: currentForm,\n          setCurrentForm: setCurrentForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Income, {\n          currentForm: currentForm,\n          setCurrentForm: setCurrentForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Expenses, {\n          currentForm: currentForm,\n          setCurrentForm: setCurrentForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          currentForm: currentForm,\n          setCurrentForm: setCurrentForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const orbMemo = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(Orb, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }, []);\n\n  // Initial welcome message\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      speak('Welcome to your accessible financial management app. You can navigate using voice commands. Say \"dashboard\" for overview, \"income\" for income management, or \"expenses\" for expense tracking.');\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [speak]);\n  return /*#__PURE__*/_jsxDEV(AppStyled, {\n    bg: bg,\n    className: \"App\",\n    children: [orbMemo, /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        active: active,\n        setActive: setActive,\n        isListening: isListening,\n        startListening: startListening,\n        stopListening: stopListening,\n        speechEnabled: speechEnabled,\n        setSpeechEnabled: setSpeechEnabled,\n        speak: speak\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [currentForm && /*#__PURE__*/_jsxDEV(VoiceStatusPanel, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Voice Input Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Adding \", currentForm, \". Currently inputting: \", formFields[currentForm][currentField]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentForm(null);\n              setCurrentField(0);\n              setFormData({});\n              speak('Form cancelled');\n            },\n            children: \"Cancel Voice Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), displayData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoiceInstructions, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Voice Commands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Dashboard\\\" - Go to overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Income\\\" - Manage income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Expenses\\\" - Manage expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Add income\\\" - Start income entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Add expense\\\" - Start expense entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Read total\\\" - Hear balance summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 \\\"Cancel\\\" - Stop current action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HdKhAN1bRFjF8FmzGjLpVuGoPvE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = App;\nconst AppStyled = styled.div`\n  height: 100vh;\n  background-image: url(${props => props.bg});\n  position: relative;\n  main{\n    flex: 1;\n    background: rgba(252, 246, 249, 0.78);\n    border: 3px solid #FFFFFF;\n    backdrop-filter: blur(4.5px);\n    border-radius: 32px;\n    overflow-x: hidden;\n    &::-webkit-scrollbar{\n      width: 0;\n    }\n  }\n`;\n_c2 = AppStyled;\nconst VoiceStatusPanel = styled.div`\n  background: #FFF3CD;\n  border: 1px solid #FFEAA7;\n  border-radius: 8px;\n  padding: 1rem;\n  margin: 1rem;\n  \n  h3 {\n    color: #856404;\n    margin-bottom: 0.5rem;\n  }\n  \n  p {\n    color: #856404;\n    margin-bottom: 0.5rem;\n  }\n  \n  button {\n    background: #856404;\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    cursor: pointer;\n    \n    &:hover {\n      background: #6c5228;\n    }\n  }\n`;\n_c3 = VoiceStatusPanel;\nconst VoiceInstructions = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  padding: 1rem;\n  max-width: 300px;\n  \n  h4 {\n    margin-bottom: 0.5rem;\n    color: var(--primary-color);\n  }\n  \n  div p {\n    font-size: 0.85rem;\n    color: #666;\n    margin-bottom: 0.25rem;\n  }\n`;\n_c4 = VoiceInstructions;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppStyled\");\n$RefreshReg$(_c3, \"VoiceStatusPanel\");\n$RefreshReg$(_c4, \"VoiceInstructions\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","useRef","useEffect","styled","bg","MainLayout","Orb","Navigation","Dashboard","Income","Expenses","useGlobalContext","App","active","setActive","isListening","setIsListening","isSpeaking","setIsSpeaking","speechEnabled","setSpeechEnabled","currentForm","setCurrentForm","formData","setFormData","currentField","setCurrentField","recognitionRef","synthRef","global","formFields","income","expense","window","current","speechSynthesis","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","transcript","results","toLowerCase","trim","handleVoiceCommand","onend","onerror","console","error","speak","text","cancel","utterance","SpeechSynthesisUtterance","rate","pitch","volume","onstart","startListening","start","stopListening","stop","command","log","includes","totalIncome","totalExpenses","balance","totalBalance","handleFormInput","input","fieldName","amount","parseFloat","replace","isNaN","prev","nextField","length","nextFieldName","newEntry","date","Date","category","addIncome","title","addExpense","displayData","orbMemo","timer","setTimeout","clearTimeout","AppStyled","div","props","VoiceStatusPanel","VoiceInstructions"],"sources":["C:/Users/anany/FINTECH/FinAble2.0/frontend/src/App.js"],"sourcesContent":["import React, {useState, useMemo, useCallback, useRef, useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport bg from './img/bg.png';\r\nimport {MainLayout} from './styles/Layouts';\r\nimport Orb from './Components/Orb/Orb';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport Dashboard from './Components/Dashboard/Dashboard';\r\nimport Income from './Components/Income/Income';\r\nimport Expenses from './Components/Expenses/Expenses';\r\nimport { useGlobalContext } from './context/globalContext';\r\n\r\nfunction App() {\r\n  const [active, setActive] = useState(1);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [speechEnabled, setSpeechEnabled] = useState(true);\r\n  const [currentForm, setCurrentForm] = useState(null);\r\n  const [formData, setFormData] = useState({});\r\n  const [currentField, setCurrentField] = useState(0);\r\n  \r\n  const recognitionRef = useRef(null);\r\n  const synthRef = useRef(null);\r\n  const global = useGlobalContext();\r\n  \r\n  const formFields = {\r\n    income: ['title', 'amount', 'category', 'description'],\r\n    expense: ['title', 'amount', 'category', 'description']\r\n  };\r\n\r\n  // Speech synthesis setup\r\n  useEffect(() => {\r\n    if ('speechSynthesis' in window) {\r\n      synthRef.current = window.speechSynthesis;\r\n    }\r\n  }, []);\r\n\r\n  // Speech recognition setup\r\n  useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window) {\r\n      recognitionRef.current = new window.webkitSpeechRecognition();\r\n      recognitionRef.current.continuous = false;\r\n      recognitionRef.current.interimResults = false;\r\n      recognitionRef.current.lang = 'en-IN';\r\n\r\n      recognitionRef.current.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript.toLowerCase().trim();\r\n        handleVoiceCommand(transcript);\r\n      };\r\n\r\n      recognitionRef.current.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsListening(false);\r\n        speak('Sorry, I couldn\\'t understand that. Please try again.');\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const speak = useCallback((text) => {\r\n    if (!speechEnabled || !synthRef.current) return;\r\n    \r\n    synthRef.current.cancel();\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.rate = 0.8;\r\n    utterance.pitch = 1;\r\n    utterance.volume = 1;\r\n    \r\n    utterance.onstart = () => setIsSpeaking(true);\r\n    utterance.onend = () => setIsSpeaking(false);\r\n    \r\n    synthRef.current.speak(utterance);\r\n  }, [speechEnabled]);\r\n\r\n  const startListening = () => {\r\n    if (recognitionRef.current && !isListening) {\r\n      setIsListening(true);\r\n      recognitionRef.current.start();\r\n    }\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognitionRef.current && isListening) {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  const handleVoiceCommand = (command) => {\r\n    console.log('Voice command received:', command);\r\n    \r\n    // Navigation commands\r\n    if (command.includes('dashboard') || command.includes('home')) {\r\n      setActive(1);\r\n      speak('Navigating to Dashboard');\r\n    } else if (command.includes('income') || command.includes('earnings')) {\r\n      setActive(3);\r\n      speak('Navigating to Income section');\r\n    } else if (command.includes('expense') || command.includes('spending')) {\r\n      setActive(4);\r\n      speak('Navigating to Expenses section');\r\n    } else if (command.includes('transactions')) {\r\n      setActive(2);\r\n      speak('Navigating to Transactions');\r\n    } else if (command.includes('add income')) {\r\n      setCurrentForm('income');\r\n      setCurrentField(0);\r\n      setFormData({});\r\n      setActive(3);\r\n      speak('Starting income entry. Please provide the title or name for this income.');\r\n    } else if (command.includes('add expense')) {\r\n      setCurrentForm('expense');\r\n      setCurrentField(0);\r\n      setFormData({});\r\n      setActive(4);\r\n      speak('Starting expense entry. Please provide the title or name for this expense.');\r\n    } else if (command.includes('cancel') || command.includes('stop')) {\r\n      setCurrentForm(null);\r\n      setCurrentField(0);\r\n      setFormData({});\r\n      speak('Form cancelled');\r\n    } else if (command.includes('read total') || command.includes('balance')) {\r\n      const totalIncome = global.totalIncome();\r\n      const totalExpenses = global.totalExpenses();\r\n      const balance = global.totalBalance();\r\n      speak(`Your total income is ${totalIncome} rupees. Total expenses are ${totalExpenses} rupees. Your current balance is ${balance} rupees.`);\r\n    } else if (currentForm) {\r\n      handleFormInput(command);\r\n    } else {\r\n      speak('Command not recognized. Say \"dashboard\" for home, \"income\" for income section, \"expenses\" for expenses, \"add income\" to add income, or \"add expense\" to add expense.');\r\n    }\r\n  };\r\n\r\n  const handleFormInput = async (input) => {\r\n    const fieldName = formFields[currentForm][currentField];\r\n    \r\n    if (fieldName === 'amount') {\r\n      const amount = parseFloat(input.replace(/[^\\d.]/g, ''));\r\n      if (isNaN(amount)) {\r\n        speak('Please provide a valid amount in numbers');\r\n        return;\r\n      }\r\n      setFormData(prev => ({ ...prev, [fieldName]: amount }));\r\n    } else {\r\n      setFormData(prev => ({ ...prev, [fieldName]: input }));\r\n    }\r\n\r\n    const nextField = currentField + 1;\r\n    if (nextField < formFields[currentForm].length) {\r\n      setCurrentField(nextField);\r\n      const nextFieldName = formFields[currentForm][nextField];\r\n      speak(`Got it. Now please provide the ${nextFieldName === 'amount' ? 'amount in rupees' : nextFieldName}.`);\r\n    } else {\r\n      // Form complete\r\n      const newEntry = {\r\n        ...formData,\r\n        [fieldName]: fieldName === 'amount' ? parseFloat(input.replace(/[^\\d.]/g, '')) : input,\r\n        date: new Date(),\r\n        category: formData.category || 'Other'\r\n      };\r\n\r\n      try {\r\n        if (currentForm === 'income') {\r\n          await global.addIncome(newEntry);\r\n          speak(`Income entry added successfully. ${newEntry.title} for ${newEntry.amount} rupees has been recorded.`);\r\n        } else {\r\n          await global.addExpense(newEntry);\r\n          speak(`Expense entry added successfully. ${newEntry.title} for ${newEntry.amount} rupees has been recorded.`);\r\n        }\r\n      } catch (error) {\r\n        speak('There was an error saving your entry. Please try again.');\r\n      }\r\n\r\n      setCurrentForm(null);\r\n      setCurrentField(0);\r\n      setFormData({});\r\n    }\r\n  };\r\n\r\n  const displayData = () => {\r\n    switch(active){\r\n      case 1:\r\n        return <Dashboard currentForm={currentForm} setCurrentForm={setCurrentForm} />;\r\n      case 2:\r\n        return <Dashboard currentForm={currentForm} setCurrentForm={setCurrentForm} />;\r\n      case 3:\r\n        return <Income currentForm={currentForm} setCurrentForm={setCurrentForm} />;\r\n      case 4: \r\n        return <Expenses currentForm={currentForm} setCurrentForm={setCurrentForm} />;\r\n      default: \r\n        return <Dashboard currentForm={currentForm} setCurrentForm={setCurrentForm} />;\r\n    }\r\n  };\r\n\r\n  const orbMemo = useMemo(() => {\r\n    return <Orb />;\r\n  },[]);\r\n\r\n  // Initial welcome message\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      speak('Welcome to your accessible financial management app. You can navigate using voice commands. Say \"dashboard\" for overview, \"income\" for income management, or \"expenses\" for expense tracking.');\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [speak]);\r\n\r\n  return (\r\n    <AppStyled bg={bg} className=\"App\">\r\n      {orbMemo}\r\n      <MainLayout>\r\n        <Navigation \r\n          active={active} \r\n          setActive={setActive}\r\n          isListening={isListening}\r\n          startListening={startListening}\r\n          stopListening={stopListening}\r\n          speechEnabled={speechEnabled}\r\n          setSpeechEnabled={setSpeechEnabled}\r\n          speak={speak}\r\n        />\r\n        <main>\r\n          {/* Voice Status Panel */}\r\n          {currentForm && (\r\n            <VoiceStatusPanel>\r\n              <h3>Voice Input Mode</h3>\r\n              <p>Adding {currentForm}. Currently inputting: {formFields[currentForm][currentField]}</p>\r\n              <button\r\n                onClick={() => {\r\n                  setCurrentForm(null);\r\n                  setCurrentField(0);\r\n                  setFormData({});\r\n                  speak('Form cancelled');\r\n                }}\r\n              >\r\n                Cancel Voice Input\r\n              </button>\r\n            </VoiceStatusPanel>\r\n          )}\r\n          \r\n          {displayData()}\r\n        </main>\r\n      </MainLayout>\r\n      \r\n      {/* Voice Instructions Panel */}\r\n      <VoiceInstructions>\r\n        <h4>Voice Commands</h4>\r\n        <div>\r\n          <p>• \"Dashboard\" - Go to overview</p>\r\n          <p>• \"Income\" - Manage income</p>\r\n          <p>• \"Expenses\" - Manage expenses</p>\r\n          <p>• \"Add income\" - Start income entry</p>\r\n          <p>• \"Add expense\" - Start expense entry</p>\r\n          <p>• \"Read total\" - Hear balance summary</p>\r\n          <p>• \"Cancel\" - Stop current action</p>\r\n        </div>\r\n      </VoiceInstructions>\r\n    </AppStyled>\r\n  );\r\n}\r\n\r\nconst AppStyled = styled.div`\r\n  height: 100vh;\r\n  background-image: url(${props => props.bg});\r\n  position: relative;\r\n  main{\r\n    flex: 1;\r\n    background: rgba(252, 246, 249, 0.78);\r\n    border: 3px solid #FFFFFF;\r\n    backdrop-filter: blur(4.5px);\r\n    border-radius: 32px;\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar{\r\n      width: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst VoiceStatusPanel = styled.div`\r\n  background: #FFF3CD;\r\n  border: 1px solid #FFEAA7;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  margin: 1rem;\r\n  \r\n  h3 {\r\n    color: #856404;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  p {\r\n    color: #856404;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  button {\r\n    background: #856404;\r\n    color: white;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n      background: #6c5228;\r\n    }\r\n  }\r\n`;\r\n\r\nconst VoiceInstructions = styled.div`\r\n  position: fixed;\r\n  bottom: 1rem;\r\n  right: 1rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  padding: 1rem;\r\n  max-width: 300px;\r\n  \r\n  h4 {\r\n    margin-bottom: 0.5rem;\r\n    color: var(--primary-color);\r\n  }\r\n  \r\n  div p {\r\n    font-size: 0.85rem;\r\n    color: #666;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}