{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anany\\\\OneDrive\\\\Desktop\\\\DTI\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:2000/api/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Add income to the list of incomes\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}income/add`, income);\n      getIncomes(); // Fetch updated incomes\n    } catch (error) {\n      setError('Failed to add income. Please try again.'); // Set error state in case of failure\n      console.error('Error adding income:', error);\n    }\n  };\n\n  // Fetch incomes from the server\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}incomes/list`);\n      setIncomes(response.data);\n    } catch (error) {\n      setError('Failed to fetch incomes. Please try again.'); // Set error state in case of failure\n      console.error('Error fetching incomes:', error);\n    }\n  };\n\n  // Delete income by ID\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}income/delete/${id}`);\n      getIncomes(); // Fetch updated incomes\n    } catch (error) {\n      setError('Failed to delete income. Please try again.'); // Set error state in case of failure\n      console.error('Error deleting income:', error);\n    }\n  };\n\n  // Calculate total income\n  const totalIncome = () => {\n    return incomes.reduce((total, income) => total + income.amount, 0);\n  };\n\n  // Add expense to the list of expenses\n  const addExpense = async expense => {\n    try {\n      await axios.post(`${BASE_URL}expenses/add`, expense);\n      getExpenses(); // Fetch updated expenses\n    } catch (error) {\n      setError('Failed to add expense. Please try again.'); // Set error state in case of failure\n      console.error('Error adding expense:', error);\n    }\n  };\n\n  // Fetch expenses from the server\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}expenses`);\n      setExpenses(response.data);\n    } catch (error) {\n      setError('Failed to fetch expenses. Please try again.'); // Set error state in case of failure\n      console.error('Error fetching expenses:', error);\n    }\n  };\n\n  // Delete expense by ID\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}expenses/delete/${id}`);\n      getExpenses(); // Fetch updated expenses\n    } catch (error) {\n      setError('Failed to delete expense. Please try again.'); // Set error state in case of failure\n      console.error('Error deleting expense:', error);\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = () => {\n    return expenses.reduce((total, expense) => total + expense.amount, 0);\n  };\n\n  // Calculate total balance\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Return the recent transaction history\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      addExpense,\n      getExpenses,\n      expenses,\n      deleteExpense,\n      totalIncome,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","post","getIncomes","console","response","get","data","deleteIncome","id","delete","totalIncome","reduce","total","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/anany/OneDrive/Desktop/DTI/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from 'axios';\n\nconst BASE_URL = \"http://localhost:2000/api/\";\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({ children }) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n\n    // Add income to the list of incomes\n    const addIncome = async (income) => {\n        try {\n            await axios.post(`${BASE_URL}income/add`, income);\n            getIncomes(); // Fetch updated incomes\n        } catch (error) {\n            setError('Failed to add income. Please try again.'); // Set error state in case of failure\n            console.error('Error adding income:', error);\n        }\n    };\n\n    // Fetch incomes from the server\n    const getIncomes = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}incomes/list`);\n            setIncomes(response.data);\n        } catch (error) {\n            setError('Failed to fetch incomes. Please try again.'); // Set error state in case of failure\n            console.error('Error fetching incomes:', error);\n        }\n    };\n\n    // Delete income by ID\n    const deleteIncome = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}income/delete/${id}`);\n            getIncomes(); // Fetch updated incomes\n        } catch (error) {\n            setError('Failed to delete income. Please try again.'); // Set error state in case of failure\n            console.error('Error deleting income:', error);\n        }\n    };\n\n    // Calculate total income\n    const totalIncome = () => {\n        return incomes.reduce((total, income) => total + income.amount, 0);\n    };\n\n    // Add expense to the list of expenses\n    const addExpense = async (expense) => {\n        try {\n            await axios.post(`${BASE_URL}expenses/add`, expense);\n            getExpenses(); // Fetch updated expenses\n        } catch (error) {\n            setError('Failed to add expense. Please try again.'); // Set error state in case of failure\n            console.error('Error adding expense:', error);\n        }\n    };\n\n    // Fetch expenses from the server\n    const getExpenses = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}expenses`);\n            setExpenses(response.data);\n        } catch (error) {\n            setError('Failed to fetch expenses. Please try again.'); // Set error state in case of failure\n            console.error('Error fetching expenses:', error);\n        }\n    };\n\n    // Delete expense by ID\n    const deleteExpense = async (id) => {\n        try {\n            await axios.delete(`${BASE_URL}expenses/delete/${id}`);\n            getExpenses(); // Fetch updated expenses\n        } catch (error) {\n            setError('Failed to delete expense. Please try again.'); // Set error state in case of failure\n            console.error('Error deleting expense:', error);\n        }\n    };\n\n    // Calculate total expenses\n    const totalExpenses = () => {\n        return expenses.reduce((total, expense) => total + expense.amount, 0);\n    };\n\n    // Calculate total balance\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses();\n    };\n\n    // Return the recent transaction history\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        return history.slice(0, 3);\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            addExpense,\n            getExpenses,\n            expenses,\n            deleteExpense,\n            totalIncome,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}