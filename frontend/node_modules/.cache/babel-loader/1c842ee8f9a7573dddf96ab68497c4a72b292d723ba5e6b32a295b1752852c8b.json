{"ast":null,"code":"\"use strict\";\n\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AdaptationClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/adaptation_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./adaptation_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that implements Google Cloud Speech Adaptation API.\n * @class\n * @memberof v1\n */\nclass AdaptationClient {\n  /**\n   * Construct an instance of AdaptationClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new AdaptationClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b, _c, _d, _e;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) && (opts === null || opts === void 0 ? void 0 : opts.universeDomain) && (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n      throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n    this._universeDomain = (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n    this._servicePath = 'speech.' + this._universeDomain;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n    const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== this._servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = this._servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === this._servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process === 'object' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n      locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n      phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n      projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listPhraseSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets'),\n      listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses')\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v1.Adaptation', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    var _this = this;\n    // If the client stub promise is already initialized, return immediately.\n    if (this.adaptationStub) {\n      return this.adaptationStub;\n    }\n    // Put together the \"service stub\" for\n    // google.cloud.speech.v1.Adaptation.\n    this.adaptationStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.speech.v1.Adaptation') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.cloud.speech.v1.Adaptation, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const adaptationStubMethods = ['createPhraseSet', 'getPhraseSet', 'listPhraseSet', 'updatePhraseSet', 'deletePhraseSet', 'createCustomClass', 'getCustomClass', 'listCustomClasses', 'updateCustomClass', 'deleteCustomClass'];\n    for (const methodName of adaptationStubMethods) {\n      const callPromise = this.adaptationStub.then(stub => function () {\n        if (_this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.adaptationStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'speech.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'speech.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  get apiEndpoint() {\n    return this._servicePath;\n  }\n  get universeDomain() {\n    return this._universeDomain;\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  createPhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createPhraseSet(request, options, callback);\n  }\n  getPhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getPhraseSet(request, options, callback);\n  }\n  updatePhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updatePhraseSet(request, options, callback);\n  }\n  deletePhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deletePhraseSet(request, options, callback);\n  }\n  createCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createCustomClass(request, options, callback);\n  }\n  getCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getCustomClass(request, options, callback);\n  }\n  updateCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateCustomClass(request, options, callback);\n  }\n  deleteCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteCustomClass(request, options, callback);\n  }\n  listPhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listPhraseSet(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent, which owns this collection of phrase set. Format:\n   *\n   *   `projects/{project}/locations/{location}`\n   *\n   *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n   *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n   *   endpoint, use the `global` location. To specify a region, use a\n   *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n   *   with matching `us` or `eu` location value.\n   * @param {number} request.pageSize\n   *   The maximum number of phrase sets to return. The service may return\n   *   fewer than this value. If unspecified, at most 50 phrase sets will be\n   *   returned. The maximum value is 1000; values above 1000 will be coerced to\n   *   1000.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous `ListPhraseSet` call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to `ListPhraseSet` must\n   *   match the call that provided the page token.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1.PhraseSet|PhraseSet} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listPhraseSetAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listPhraseSetStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listPhraseSet'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listPhraseSet.createStream(this.innerApiCalls.listPhraseSet, request, callSettings);\n  }\n  /**\n   * Equivalent to `listPhraseSet`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent, which owns this collection of phrase set. Format:\n   *\n   *   `projects/{project}/locations/{location}`\n   *\n   *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n   *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n   *   endpoint, use the `global` location. To specify a region, use a\n   *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n   *   with matching `us` or `eu` location value.\n   * @param {number} request.pageSize\n   *   The maximum number of phrase sets to return. The service may return\n   *   fewer than this value. If unspecified, at most 50 phrase sets will be\n   *   returned. The maximum value is 1000; values above 1000 will be coerced to\n   *   1000.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous `ListPhraseSet` call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to `ListPhraseSet` must\n   *   match the call that provided the page token.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.speech.v1.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/adaptation.list_phrase_set.js</caption>\n   * region_tag:speech_v1_generated_Adaptation_ListPhraseSet_async\n   */\n  listPhraseSetAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listPhraseSet'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listPhraseSet.asyncIterate(this.innerApiCalls['listPhraseSet'], request, callSettings);\n  }\n  listCustomClasses(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listCustomClasses(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent, which owns this collection of custom classes. Format:\n   *\n   *   `projects/{project}/locations/{location}/customClasses`\n   *\n   *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n   *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n   *   endpoint, use the `global` location. To specify a region, use a\n   *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n   *   with matching `us` or `eu` location value.\n   * @param {number} request.pageSize\n   *   The maximum number of custom classes to return. The service may return\n   *   fewer than this value. If unspecified, at most 50 custom classes will be\n   *   returned. The maximum value is 1000; values above 1000 will be coerced to\n   *   1000.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous `ListCustomClass` call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to `ListCustomClass` must\n   *   match the call that provided the page token.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1.CustomClass|CustomClass} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listCustomClassesAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listCustomClassesStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listCustomClasses'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n  }\n  /**\n   * Equivalent to `listCustomClasses`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The parent, which owns this collection of custom classes. Format:\n   *\n   *   `projects/{project}/locations/{location}/customClasses`\n   *\n   *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n   *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n   *   endpoint, use the `global` location. To specify a region, use a\n   *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n   *   with matching `us` or `eu` location value.\n   * @param {number} request.pageSize\n   *   The maximum number of custom classes to return. The service may return\n   *   fewer than this value. If unspecified, at most 50 custom classes will be\n   *   returned. The maximum value is 1000; values above 1000 will be coerced to\n   *   1000.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous `ListCustomClass` call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to `ListCustomClass` must\n   *   match the call that provided the page token.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.speech.v1.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1/adaptation.list_custom_classes.js</caption>\n   * region_tag:speech_v1_generated_Adaptation_ListCustomClasses_async\n   */\n  listCustomClassesAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listCustomClasses'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified customClass resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} custom_class\n   * @returns {string} Resource name string.\n   */\n  customClassPath(project, location, customClass) {\n    return this.pathTemplates.customClassPathTemplate.render({\n      project: project,\n      location: location,\n      custom_class: customClass\n    });\n  }\n  /**\n   * Parse the project from CustomClass resource.\n   *\n   * @param {string} customClassName\n   *   A fully-qualified path representing CustomClass resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromCustomClassName(customClassName) {\n    return this.pathTemplates.customClassPathTemplate.match(customClassName).project;\n  }\n  /**\n   * Parse the location from CustomClass resource.\n   *\n   * @param {string} customClassName\n   *   A fully-qualified path representing CustomClass resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromCustomClassName(customClassName) {\n    return this.pathTemplates.customClassPathTemplate.match(customClassName).location;\n  }\n  /**\n   * Parse the custom_class from CustomClass resource.\n   *\n   * @param {string} customClassName\n   *   A fully-qualified path representing CustomClass resource.\n   * @returns {string} A string representing the custom_class.\n   */\n  matchCustomClassFromCustomClassName(customClassName) {\n    return this.pathTemplates.customClassPathTemplate.match(customClassName).custom_class;\n  }\n  /**\n   * Return a fully-qualified location resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @returns {string} Resource name string.\n   */\n  locationPath(project, location) {\n    return this.pathTemplates.locationPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\n   * Parse the project from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).project;\n  }\n  /**\n   * Parse the location from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).location;\n  }\n  /**\n   * Return a fully-qualified phraseSet resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} phrase_set\n   * @returns {string} Resource name string.\n   */\n  phraseSetPath(project, location, phraseSet) {\n    return this.pathTemplates.phraseSetPathTemplate.render({\n      project: project,\n      location: location,\n      phrase_set: phraseSet\n    });\n  }\n  /**\n   * Parse the project from PhraseSet resource.\n   *\n   * @param {string} phraseSetName\n   *   A fully-qualified path representing PhraseSet resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromPhraseSetName(phraseSetName) {\n    return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName).project;\n  }\n  /**\n   * Parse the location from PhraseSet resource.\n   *\n   * @param {string} phraseSetName\n   *   A fully-qualified path representing PhraseSet resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromPhraseSetName(phraseSetName) {\n    return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName).location;\n  }\n  /**\n   * Parse the phrase_set from PhraseSet resource.\n   *\n   * @param {string} phraseSetName\n   *   A fully-qualified path representing PhraseSet resource.\n   * @returns {string} A string representing the phrase_set.\n   */\n  matchPhraseSetFromPhraseSetName(phraseSetName) {\n    return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName).phrase_set;\n  }\n  /**\n   * Return a fully-qualified project resource name string.\n   *\n   * @param {string} project\n   * @returns {string} Resource name string.\n   */\n  projectPath(project) {\n    return this.pathTemplates.projectPathTemplate.render({\n      project: project\n    });\n  }\n  /**\n   * Parse the project from Project resource.\n   *\n   * @param {string} projectName\n   *   A fully-qualified path representing Project resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectName(projectName) {\n    return this.pathTemplates.projectPathTemplate.match(projectName).project;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.adaptationStub && !this._terminated) {\n      return this.adaptationStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.AdaptationClient = AdaptationClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","AdaptationClient","jsonProtos","require","gapicConfig","version","constructor","opts","gaxInstance","_a","_b","_c","_d","_e","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","universe_domain","universeDomain","Error","universeDomainEnvVar","process","env","undefined","_universeDomain","_servicePath","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","clientHeader","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","customClassPathTemplate","PathTemplate","locationPathTemplate","phraseSetPathTemplate","projectPathTemplate","listPhraseSet","PageDescriptor","listCustomClasses","_defaults","constructSettings","join","innerApiCalls","warn","initialize","adaptationStub","createStub","lookupService","google","cloud","speech","v1","Adaptation","adaptationStubMethods","methodName","callPromise","then","stub","Promise","reject","func","args","apply","err","descriptor","apiCall","createApiCall","emitWarning","getProjectId","callback","createPhraseSet","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","parent","getPhraseSet","name","updatePhraseSet","phraseSet","deletePhraseSet","createCustomClass","getCustomClass","updateCustomClass","customClass","deleteCustomClass","listPhraseSetStream","defaultCallSettings","callSettings","merge","createStream","listPhraseSetAsync","asyncIterate","listCustomClassesStream","listCustomClassesAsync","customClassPath","project","location","render","custom_class","matchProjectFromCustomClassName","customClassName","match","matchLocationFromCustomClassName","matchCustomClassFromCustomClassName","locationPath","matchProjectFromLocationName","locationName","matchLocationFromLocationName","phraseSetPath","phrase_set","matchProjectFromPhraseSetName","phraseSetName","matchLocationFromPhraseSetName","matchPhraseSetFromPhraseSetName","projectPath","matchProjectFromProjectName","projectName","close","resolve"],"sources":["C:/Users/anany/OneDrive/Desktop/DTI/frontend/node_modules/@google-cloud/speech/build/src/v1/adaptation_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptationClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/adaptation_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./adaptation_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that implements Google Cloud Speech Adaptation API.\n * @class\n * @memberof v1\n */\nclass AdaptationClient {\n    /**\n     * Construct an instance of AdaptationClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new AdaptationClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listPhraseSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets'),\n            listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses'),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v1.Adaptation', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.adaptationStub) {\n            return this.adaptationStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v1.Adaptation.\n        this.adaptationStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v1.Adaptation')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v1.Adaptation, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const adaptationStubMethods = [\n            'createPhraseSet',\n            'getPhraseSet',\n            'listPhraseSet',\n            'updatePhraseSet',\n            'deletePhraseSet',\n            'createCustomClass',\n            'getCustomClass',\n            'listCustomClasses',\n            'updateCustomClass',\n            'deleteCustomClass',\n        ];\n        for (const methodName of adaptationStubMethods) {\n            const callPromise = this.adaptationStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.adaptationStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createPhraseSet(request, options, callback);\n    }\n    getPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getPhraseSet(request, options, callback);\n    }\n    updatePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updatePhraseSet(request, options, callback);\n    }\n    deletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deletePhraseSet(request, options, callback);\n    }\n    createCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createCustomClass(request, options, callback);\n    }\n    getCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getCustomClass(request, options, callback);\n    }\n    updateCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateCustomClass(request, options, callback);\n    }\n    deleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteCustomClass(request, options, callback);\n    }\n    listPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listPhraseSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of phrase set. Format:\n     *\n     *   `projects/{project}/locations/{location}`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of phrase sets to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 phrase sets will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListPhraseSet` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListPhraseSet` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1.PhraseSet|PhraseSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listPhraseSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listPhraseSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSet.createStream(this.innerApiCalls.listPhraseSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listPhraseSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of phrase set. Format:\n     *\n     *   `projects/{project}/locations/{location}`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of phrase sets to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 phrase sets will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListPhraseSet` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListPhraseSet` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v1.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/adaptation.list_phrase_set.js</caption>\n     * region_tag:speech_v1_generated_Adaptation_ListPhraseSet_async\n     */\n    listPhraseSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSet.asyncIterate(this.innerApiCalls['listPhraseSet'], request, callSettings);\n    }\n    listCustomClasses(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listCustomClasses(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of custom classes. Format:\n     *\n     *   `projects/{project}/locations/{location}/customClasses`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of custom classes to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 custom classes will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListCustomClass` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListCustomClass` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1.CustomClass|CustomClass} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listCustomClassesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listCustomClassesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of custom classes. Format:\n     *\n     *   `projects/{project}/locations/{location}/customClasses`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of custom classes to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 custom classes will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListCustomClass` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListCustomClass` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v1.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/adaptation.list_custom_classes.js</caption>\n     * region_tag:speech_v1_generated_Adaptation_ListCustomClasses_async\n     */\n    listCustomClassesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Return a fully-qualified project resource name string.\n     *\n     * @param {string} project\n     * @returns {string} Resource name string.\n     */\n    projectPath(project) {\n        return this.pathTemplates.projectPathTemplate.render({\n            project: project,\n        });\n    }\n    /**\n     * Parse the project from Project resource.\n     *\n     * @param {string} projectName\n     *   A fully-qualified path representing Project resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProjectName(projectName) {\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.adaptationStub && !this._terminated) {\n            return this.adaptationStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.AdaptationClient = AdaptationClient;\n//# sourceMappingURL=adaptation_client.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}